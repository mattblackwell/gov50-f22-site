{
  "hash": "77e9cb8024c8eff920c60b5dcb2645d6",
  "result": {
    "markdown": "---\ntitle: \"Problem Set 1: Data Visualization\"\ndue_date: 2022-09-14\n\n---\n\n\n\nYou can find instructions for obtaining and submitting problem sets [here](/assignments/problem-sets.qmd).\n\nYou can find the GitHub Classroom link to download the template repository on the [Ed Board](https://edstem.org/us/courses/24957/)\n\n## Background\n\nIn this problem set, you will get your bearings on how to produce an Rmarkdown report and how to produce data visualizations using `ggplot`. The data we will use is the Gapminder dataset, which gives some economic and demographic information about countries over time. The variables in this data are described below. \n\n\n\n| Name        | Description                                                             |\n|:------------|:------------------------------------------------------------------------|\n| `country`   | name of the country                                                     |\n| `continent` | name of the country's continent                                         |\n| `year`      | year of the measurement, ranging from 1952 to 2007 in 5-year increments |\n| `lifeExp`   | life expectancy at birth, in years                                      |\n| `pop`       | population                                                              |\n| `gdpPercap` | GDP per capita (US dollars, inflation-adjusted)                         |\n|             |                                                                         |\n\n **NOTE**: In the template you'll get from GitHub Classroom, the default settings for chunks is to only show the output of the chunk, not the code that generated it (`echo = FALSE`). This is to give your answers a clean look and to highlight the output rather than the source coe. The template also has a part that will dump all of the R code at the end so that we can look at it if needed. \n\n\n## Question 1 (5 points)\n\nMake sure that you load the `gapminder` and `tidyverse` packages in the setup chunk (right after the header). For this question,  use the `glimpse` function to show basic information about the `gapminder` dataset. In the main text (that is, outside of a code chunk), tell us how many rows and columns there are in the data set and which of the variables are factors. \n\n **Rubric**: 2 write-up points for using the glimpse function; 2 points for reporting the dimension of the data; 1 point for identifying factors. \n\n## Question 2 (10 points)\n\nLet's investigate how life expectancy varies across the continents. Using `ggplot`, we want you to recreate the following figure:\n\n![](figures/life_exp_boxplot.png)\n\nThese are boxplots of the distribution of life expectancy in each continent. Please make sure that you include the labels as shown in this figure. For the autograder to be able to process your plot, you should assign your the output of your `ggplot` call to `plot_q2` and then evaluate `plot_q2` to ensure that the plot is produced in the output. That is, your code should look like this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_q2 <- ggplot(<arguments>) +\n  geom_<type>(<arguments>) +\n  ...\n\nplot_q2\n```\n:::\n\n\n  **Rubric**: 10 autograder points. \n\n## Question 3 (5 points)\n\nLooking at the previous plot, which continent has the highest median life expectancy? Which part of the boxplot can we determine this from?\n\n **Rubric**: 5 write up points (2 for identifying the correct continent, 3 for correctly identifying how to find this on the boxplot)\n\n## Question 4 (15 points)\n\nThe previous boxplot groups all the years together into one boxplot, but what if we want to understand how life expectancy is changing over time? Next, we will recreate the following plot: \n\n![](figures/life_exp_facet.png)\n\nThe plot shows each country's life expectancy trajectory over time, broken out by continent with smoothed average lines overlayed for each continent. To get started, we'll give you a few clues about what we've done here:\n\n- The lines for each country use the color `\"gray70\"`. \n- The size of the smoothed line is 1.1 and the method used is the loess smoother. We also have turned off the standard errors. \n- Make sure that the facets are all on one row. Look at the [`facet_wrap`](https://ggplot2.tidyverse.org/reference/facet_wrap.html) documentation if need help with this. \n- Make sure that the labels are correctly specified. \n- Use the chunk options `fig.width = 11` and `fig.height = 4` to shrink the font size so the year labels will not overlap. \n\nFinally, assign the output of your `ggplot` call to `plot_q4` and then evaluate `plot_q4` (similarly to what you did in Question 2). \n\n **Rubric**: 15 autograder points; 0 PDF points. \n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}